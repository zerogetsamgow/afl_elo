{
    "collab_server" : "",
    "contents" : "library(tidyverse)\nlibrary(elo)\nlibrary(fitzRoy)\nlibrary(lubridate)\nlibrary(purrr)\n\n\n# Get results data for \nresults <- fitzRoy::get_match_results()\nresults <- results %>%filter(Season %in% c(2012,2013,2014,2015,2016,2017))%>%\n\tmutate(seas_rnd = paste0(Season, \".\", Round.Number),\n\t\t\t\t First.Game = ifelse(Round.Number == 1, TRUE, FALSE)\n\t)\n# Get fixture data\nfixture <- fitzRoy::get_fixture()\nfixture <- fixture %>%\n\t# filter(Date > max(results$Date)) %>%\n\tmutate(Date = ymd(format(Date, \"%Y-%m-%d\"))) %>%\n\trename(Round.Number = Round)\n\n## Create two home ground advantage measures\n\n# Get team, venue lat and lon data ----\nlibrary(googlesheets)\n# Run gs_auth() to set this up\ngs <- gs_key(\"17041tChNHzRNYmi1nCCJvacOqbk19MJUzW8UVX91b_A\")\n\nteams <-  gs_read(gs, sheet = \"AFL_data\", ws = \"Teams\",\n\t\t\t\t\t\t\t\t\tlocale = readr::locale(encoding = \"UTF-8\")) %>% \n\tas.tibble() %>%\n\tselect(team, team_lat, team_lon)\n\n## ADD PERTH STADIUM TO SHEET AND EUREKA STADIUM\nvenues <- gs_read(gs, sheet = \"AFL_data\", ws = \"Venues\",\n\t\t\t\t\t\t\t\t\tlocale = readr::locale(encoding = \"UTF-8\")) %>% \n\tas.tibble %>%\n\tselect(venue, venue_lat, venue_lon)\n\nlibrary(geosphere)\n# Use crossing to obtain matrix product of team and venue tables\ndistances <- crossing(teams, venues) %>%\n\t           #calculate travel distance from team home city to each ground using geosphere::distHaversine\n\t           mutate(team_pair = pmap(list(team_lon,team_lat),c),\n\t           \t\t\t  venue_pair = pmap(list(venue_lon,venue_lat),c),\n\t           \t      travel=pmap_dbl(list(team_pair, venue_pair), distHaversine)/1000) %>%\n\t           select(team,Venue=venue,travel) %>% as.tibble()\n\n## define travel advantage function\nadv_ground_travel <- function(home_value, away_value) {(home_value - away_value)^.33}\n\n## Function to calculate experience at the ground for the current and previous season.\nat_ground_exp <- function(game_date, game_season, game_venue, team) {\n\tresults %>% filter(game_date > Date,  # only include games before the game being modelled\n\t\t\t\t\t\t\t\t\t\t game_season %in% c(Season, Season-1), # only include games in current season\n\t\t\t\t\t\t\t\t\t\t Home.Team==team | Away.Team==team, # include all matches that\n\t\t\t\t\t\t\t\t\t\t game_venue==Venue) %>%\n\t\t           nrow()\n}\n\n# Function to calculate experience advantage\nadv_ground_exp <- function(home_value, away_value) {log(home_value + 1) - log(away_value + 1)}\n\nadv_alpha <- 6\nadv_beta <- 15\nadv_home_total <- function(travel_value, exp_value) {adv_alpha * travel_value + adv_beta * exp_value }\n\n## Add ground advantage data to results table\nresults <- results %>% \n\t\t\t\t\t left_join(., distances, by=c(\"Home.Team\"=\"team\",\"Venue\"=\"Venue\")) %>%\n           rename(\"Home.Travel\"='travel') %>% \n\t         left_join(., distances, by=c(\"Away.Team\"=\"team\",\"Venue\"=\"Venue\")) %>%\n\t         rename(\"Away.Travel\"='travel') %>%\n\t         mutate(home_adv_travel = pmap_dbl(Home.Travel,Away.Travel,adv_ground_travel),\n\t         \t\t\t\t#home_exp = pmap_int(list(Date, Season, Venue, Home.Team), at_ground_exp),\n\t         \t\t\t  #away_exp = pmap_int(list(Date, Season, Venue, Away.Team), at_ground_exp),\n\t         \t\t\t  #home_adv_exp = pmap_dbl(list(home_exp,away_exp), adv_ground_exp),\n\t         \t\t\t  #home_grd_adv = pmap_dbl(list(home_adv_travel, home_adv_exp), adv_home_total))\n)\n\t# Simple ELO\n\t# Set parameters\n\tHGA <- 0\n\tcarryOver <- 1\n\tB <- 0.03\n\tk_val <- 20\n\t\n\t# Create margin function to ensure result is between 0 and 1\n\tmap_margin_to_outcome <- function(margin, B) {\n\t\t1 / (1 + (exp(-B * margin)))\n\t}\n\t\n\n# Run Simple ELO using\nelo.data.simple <- elo.run(\n\tmap_margin_to_outcome(Home.Points - Away.Points, B = B) ~\n\tadjust(Home.Team, HGA) +\n\tAway.Team +\n\tgroup(seas_rnd) ,\n  #regress(First.Game, 1500, carryOver),\n\tk = k_val,\n\tdata = results\n)\n\n# Rund elo with home advantage data\nelo.data.advantage <- elo.run(\n\tscore(Home.Points, Away.Points) ~\n\t\t#map_margin_to_outcome(Home.Points - Away.Points, B = B) ~\n\t\tadjust(Home.Team, home_grd_adv) +\n\t\tAway.Team +\n\t\tgroup(seas_rnd) ,\n\t  #regress(First.Game, 1500, carryOver),\n\t  k = k_val,\n\t  data = results\n)\n\n# as.data.frame(elo.data)\n# as.matrix(elo.data)\n# final.elos(elo.data)\n\n\n# Do predictions\nfixture <- fixture %>%filter(Season==2018)%>%\n\tmutate(Prob.Simple = predict(elo.data.simple, newdata = fixture),\n\t\t\t\t Prob.Advantage = predict(elo.data.advantage, newdata = fixture))\n\n\n# View(fixture)\n\n\npredictions <- left_join(fixture, results, by=c(\"Date\"=\"Date\",\"Home.Team\"=\"Home.Team\" ))%>%\n\tmutate(pick=if_else(Prob>0.5,1,-1))%>%\n\tmutate(correct=pick*Margin)%>%\n\tmutate(right_pick=if_else(correct>0,1,0))%>%\n\tmutate(accuracy=sum(right_pick, na.rm = TRUE))%>%View()\n",
    "created" : 1535970309814.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2701851784",
    "id" : "2EC50033",
    "lastKnownWriteTime" : 1536143688,
    "last_content_update" : 1536143720711,
    "path" : "~/Documents/GitHub/afl_elo/first_model.R",
    "project_path" : "first_model.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}